plugins {
    id 'eclipse'
    id 'maven-publish'
    id 'net.minecraftforge.gradle' version '5.1.+'
}

version = '0.9.1'
group = 'craftjakob.gildednetherite'
archivesBaseName = 'GildedNetherite-CJ-forge-mc1.19'

java.toolchain.languageVersion = JavaLanguageVersion.of(17)

println "Java: ${System.getProperty 'java.version'}, JVM: ${System.getProperty 'java.vm.version'} (${System.getProperty 'java.vendor'}), Arch: ${System.getProperty 'os.arch'}"
minecraft {
    mappings channel: 'official', version: '1.19'

    runs {
        client {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            property 'forge.enabledGameTestNamespaces', 'gildednetherite'
            mods {
                gildednetherite  {
                    source sourceSets.main
                }
            }
        }
        server {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            property 'forge.enabledGameTestNamespaces', 'gildednetherite'
            mods {
                gildednetherite  {
                    source sourceSets.main
                }
            }
        }
        gameTestServer {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            property 'forge.enabledGameTestNamespaces', 'gildednetherite'
            mods {
                gildednetherite  {
                    source sourceSets.main
                }
            }
        }
        data {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            args '--mod', 'gildednetherite', '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources/')
            mods {
                gildednetherite  {
                    source sourceSets.main
                }
            }
        }
    }
}

sourceSets.main.resources { srcDir 'src/generated/resources' }

repositories {
    maven {
        url "https://cursemaven.com"
        content {
            includeGroup "curse.maven"
        }
    }
    
/*
  	maven {
   		 name = "Progwml6 maven"
   		 url = "https://dvs1.progwml6.com/files/maven/"
  	}
  	maven {
  		  name = "ModMaven"
  		  url = "https://modmaven.dev"
 	}
 	*/
}

dependencies {
    minecraft 'net.minecraftforge:forge:1.19-41.1.0'
    
	//compileOnly fg.deobf("mezz.jei:jei-${mc_version}:${jei_version}:api")
	//runtimeOnly fg.deobf("mezz.jei:jei-${mc_version}:${jei_version}")
	//runtimeOnly fg.deobf("curse.maven:morebowscj-646406:3883984")

}

jar {
    manifest {
        attributes([
                "Specification-Title"     : "Gilded Netherite",
                "Specification-Vendor"    : "Craftjakob",
                "Specification-Version"   : "1", 
                "Implementation-Title"    : project.name,
                "Implementation-Version"  : project.jar.archiveVersion,
                "Implementation-Vendor"   : "Craftjakob",
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
}

jar.finalizedBy('reobfJar')

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifact jar
        }
    }
    repositories {
        maven {
            url "file://${project.projectDir}/mcmodsrepo"
        }
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'
}
